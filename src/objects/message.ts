import { Application } from './application';
import { Attachment } from './attachment';
import { Channel } from './channel';
import { ChannelMention } from './channelMention';
import { Component } from './component';
import { Embed } from './embed';
import { Member } from './member';
import { MessageActivity } from './messageActivity';
import { MessageInteraction } from './messageInteraction';
import { MessageReference } from './messageReference';
import { MessageStickerItem } from './messageStickerItem';
import { Reaction } from './reaction';
import { Snowflake } from './snowflake';
import { User } from './user';

/**
 * @interface Message
 * @see https://discord.com/developers/docs/resources/channel#message-object
 */
export interface Message {
    /**
     * @property { Snowflake } id - id of the message
     */
    id: Snowflake;

    /**
     * @property { Snowflake } channel_id - id of the channel the message was sent in
     */
    channel_id: Snowflake;

    /**
     * @property { Snowflake | undefined } guild_id - id of the guild the message was sent in
     */
    guild_id?: Snowflake;

    /**
     * @property { User } author - the author of this message (not guaranteed to be a valid user, see below)
     * @see https://discord.com/developers/docs/resources/user#user-object
     */
    author: User;

    /**
     * @property { Member | undefined } member - member properties for this message's author
     * @see https://discord.com/developers/docs/resources/guild#guild-member-object
     */
    member?: Member;

    /**
     * @property { string } content - contents of the message
     */
    content: string;

    /**
     * @property { string } timestamp - when this message was sent
     * ISO8601 formatted timestamp
     */
    timestamp: string;

    /**
     * @property { string | null } edited_timestamp - when this message was edited (or null if never)
     * ISO8601 formatted timestamp
     */
    edited_timestamp: string | null;

    /**
     * @property { boolean } tts - whether this was a TTS message
     */
    tts: boolean;

    /**
     * @property { boolean } mention_everyone - whether this message mentions everyone
     */
    mention_everyone: boolean;

    /**
     * @property { Array<any> } mentions - users specifically mentioned in the message
     * @see https://discord.com/developers/docs/resources/user#user-object
     * @see https://discord.com/developers/docs/resources/guild#guild-member-object
     * @todo build out hybrid user/member type described in api documentation
     */
    mentions: Array<any>;

    /**
     * @property { Array<Snowflake> } mention_roles - roles specifically mentioned in this message
     * @see https://discord.com/developers/docs/topics/permissions#role-object
     * array of role object ids
     */
    mention_roles: Array<Snowflake>;

    /**
     * @property { Array<ChannelMention> | undefined } mention_channels - channels specifically mentioned in this message
     * @see https://discord.com/developers/docs/resources/channel#channel-mention-object
     */
    mention_channels?: Array<ChannelMention>;

    /**
     * @property { Array<Attachment> } attachments - any attached files
     * @see https://discord.com/developers/docs/resources/channel#attachment-object
     */
    attachments: Array<Attachment>;

    /**
     * @property { Array<Embed> } embeds - any embedded content
     * @see https://discord.com/developers/docs/resources/channel#embed-object
     */
    embeds: Array<Embed>;

    /**
     * @property { Array<Reaction> | undefined } reactions - reactions to the message
     * @see https://discord.com/developers/docs/resources/channel#reaction-object
     */
    reactions?: Array<Reaction>;

    /**
     * @property { number | string | undefined } nonce - used for validating a message was sent
     */
    nonce?: number | string;

    /**
     * @property { boolean } pinned - whether this message is pinned
     */
    pinned: boolean;

    /**
     * @property { Snowflake | undefined } webhook_id - if the message is generated by a webhook, this is the webhook's id
     */
    webhook_id?: Snowflake;

    /**
     * @property { number } type - type of message
     * @see https://discord.com/developers/docs/resources/channel#message-object-message-types
     * @todo Add MessageType extends Number enum
     */
    type: number;

    /**
     * @property { MessageActivity | undefined } activity - sent with Rich Presence-related chat embeds
     * @see https://discord.com/developers/docs/resources/channel#message-object-message-activity-structure
     */
    activity?: MessageActivity;

    /**
     * @property { Application | undefined } application - sent with Rich Presence-related chat embeds
     * @see https://discord.com/developers/docs/resources/application#application-object
     */
    application?: Application;

    /**
     * @property { Snowflake | undefined } application_id - if the message is a response to an Interaction, this is the id of the interaction's application
     * @see https://discord.com/developers/docs/interactions/slash-commands
     */
    application_id?: Snowflake;

    /**
     * @property { MessageReference | undefined } message_reference - data showing the source of a crosspost, channel follow add, pin, or reply message
     * @see https://discord.com/developers/docs/resources/channel#message-reference-object-message-reference-structure
     */
    message_reference?: MessageReference;

    /**
     * @property { number | undefined } flags - message flags combined as a bitfield
     * @see https://discord.com/developers/docs/resources/channel#message-object-message-flags
     * @see https://en.wikipedia.org/wiki/Bit_field
     */
    flags?: number;

    /**
     * @property { Message | undefined | null } referenced_message - the message associated with the message_reference
     * @see https://discord.com/developers/docs/resources/channel#message-object
     */
    referenced_message?: Message | null;

    /**
     * @property { MessageInteraction | undefined } interaction - sent if the message is a response to an Interaction
     * @see https://discord.com/developers/docs/interactions/slash-commands#message-interaction-object-message-interaction-structure
     * @see https://discord.com/developers/docs/interactions/slash-commands
     */
    interaction?: MessageInteraction;

    /**
     * @property { Channel | undefined } thread - the thread that was started from this message, includes thread member object
     * @see https://discord.com/developers/docs/resources/channel#channel
     * @see https://discord.com/developers/docs/resources/channel#thread-member-object
     */
    thread?: Channel;

    /**
     * @property { Array<Component> | undefined } components - sent if the message contains components like buttons, action rows, or other interactive components
     * @see https://discord.com/developers/docs/interactions/message-components#component-object
     */
    components?: Array<Component>;

    /**
     * @property { Array<MessageStickerItem> | undefined } sticker_items - sent if the message contains stickers
     * @see https://discord.com/developers/docs/resources/channel#message-object-message-sticker-item-structure
     */
    sticker_items?: Array<MessageStickerItem>;
}
